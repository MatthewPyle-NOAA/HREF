#!/bin/ksh
# Name of Script:  exhref_ffggen.sh.ecf
#
# This script :
#  (1) Copies latest FFG files from dcom
#  (2) Does cnvgrib to create GRIB2 versions 
#  (3) Runs executable to ingest both the GRIB1 and GRIB2
#      versions, and output a properly labeled GRIB2 version
#  (4) Uses WGRIB2 to interpolate to grid 227
#  (5) calls executable again to stitch together tiles
#      into final output
#
# Author: Matthew Pyle, NCEP/EMC, 05/02/2019
#         
###########################################################
set -x

cd $DATA

echo "$0 STRDATE "`date`

msg="$job HAS BEGUN"
postmsg "$jlogfile" "$msg"

RFC_LIST="150 152 153 154 155 156 157 158 159 160 161 162"

echo here with PDY $PDY
echo here with PDYm1 $PDYm1
echo here with PDYm2 $PDYm2

for RFC in $RFC_LIST
do

if [ -e $DCOMROOT/prod/${PDY}/wgrbbul/FFG.009.${RFC} ]
then
cp $DCOMROOT/prod/${PDY}/wgrbbul/FFG.009.${RFC}  ffg.${PDY}.009.${RFC}_full
elif [ -e $DCOMROOT/prod/${PDYm1}/wgrbbul/FFG.009.${RFC} ]
then
echo WARNING: WILL USE DAY OLD FFG.009.${RFC}
cp $DCOMROOT/prod/${PDYm1}/wgrbbul/FFG.009.${RFC}  ffg.${PDY}.009.${RFC}_full
elif [ -e $DCOMROOT/prod/${PDYm2}/wgrbbul/FFG.009.${RFC} ]
then
echo WARNING: WILL USE TWO DAY OLD FFG.009.${RFC}
cp $DCOMROOT/prod/${PDYm2}/wgrbbul/FFG.009.${RFC}  ffg.${PDY}.009.${RFC}_full
else
     msg="FATAL ERROR: Could not find FFG.009.${RFC} files from the last two days"
     err_exit $msg
fi


$WGRIB ffg.${PDY}.009.${RFC}_full | grep 'kpds5=221' > list.221
rec_1h=`tail -n1 list.221 | awk -F : '{print $1}'`
$WGRIB ffg.${PDY}.009.${RFC}_full | grep 'kpds5=222' > list.222
rec_3h=`tail -n1 list.222 | awk -F : '{print $1}'`
$WGRIB ffg.${PDY}.009.${RFC}_full | grep 'kpds5=223' > list.223

if [ -e list.223 ]
then
rec_6h=`tail -n1 list.223 | awk -F : '{print $1}'`
else
rec_6h=99
fi


###############

$WGRIB ffg.${PDY}.009.${RFC}_full -d ${rec_1h} -grib -o ${RFC}_1h
err=$?

if [ $err -ne 0 ]
then
 msg="FATAL ERROR: DID NOT FIND 1 h FFG in ffg.${PDY}.009.${RFC}_full" 
 err_exit
fi

###############

$WGRIB ffg.${PDY}.009.${RFC}_full -d ${rec_3h} -grib -o ${RFC}_3h
err=$?

if [ $err -ne 0 ]
then
 msg="FATAL ERROR: DID NOT FIND 3 h FFG in ffg.${PDY}.009.${RFC}_full" 
 err_exit
fi

###############

$WGRIB ffg.${PDY}.009.${RFC}_full -d ${rec_6h} -grib -o ${RFC}_6h
err=$?
if [ $err -ne 0 ]
then
 msg="FATAL ERROR: DID NOT FIND 6 h FFG in ffg.${PDY}.009.${RFC}_full" 
 err_exit
fi

cat  ${RFC}_1h ${RFC}_3h  ${RFC}_6h > ffg.${PDY}.009.${RFC}
rm  ${RFC}_1h ${RFC}_3h  ${RFC}_6h list.???

$CNVGRIB -g12 ffg.${PDY}.009.${RFC} ffg.${PDY}.009.${RFC}.g2

done

echo "1" > itag
echo $PDY >> itag

$EXEChref/href_ffg_gen < itag

# wgrib2def="lambert:265:25:25 226.541:1473:5079 12.190:1025:5079"
#was wgrib2def="lambert:262.5:38.5:38.5 237.826355:1746:3000 21.885885:1014:3000"
wgrib2def="lambert:262.5:38.5:38.5 237.280:1799:3000 21.138:1059:3000"

for RFC in $RFC_LIST
do

if [ -e ffg.${PDY}.009.${RFC}.g2out ]
then
$WGRIB2 ffg.${PDY}.009.${RFC}.g2out -new_grid_interpolation neighbor -set_grib_type jpeg  \
 -new_grid ${wgrib2def} ffg.${PDY}.009.${RFC}.g2out.227
fi

done

echo "2" > itag
echo $PDY >> itag

$EXEChref/href_ffg_gen < itag

if [ $SENDCOM = "YES" ]
then
echo try copying to COMOUT
cp full.g227.grib2_ffg1h ${COMOUT}/href.t${cyc}z.ffg1h.5km.grib2
cp full.g227.grib2_ffg3h ${COMOUT}/href.t${cyc}z.ffg3h.5km.grib2
cp full.g227.grib2_ffg6h ${COMOUT}/href.t${cyc}z.ffg6h.5km.grib2
fi

#####################################################################
# GOOD RUN
set +x
echo "**************$job COMPLETED NORMALLY on `date`"
set -x
#####################################################################

msg="HAS COMPLETED NORMALLY!"
echo $msg
postmsg "$jlogfile" "$msg"
echo $msg
############## END OF SCRIPT #######################
